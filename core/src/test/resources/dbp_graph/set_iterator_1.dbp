init
  node (s, Safe)
  (set, Set) -> (emp, empty)
  (set, Set) -> (syn, sync)
  (set, Set) -> (nsyn, notSync)
  (set, Set) -> (mov, mover)
  (set, Set) -> (nmov, notMover)
/*
transition "newSet(): Set"
pre
  node (s, Safe)
post
  node (s, Safe)
  (set, Set) -> (emp, empty)
  (set, Set) -> (syn, sync)
  (set, Set) -> (nsyn, notSync)
  (set, Set) -> (mov, mover)
  (set, Set) -> (nmov, notMover)
==>
  s -> s
<==
*/

transition "newIter(Set): Iter, on emp"
pre
  node (s, Safe)
  (set, Set) -> (emp, empty)
  (set, Set) -> (syn, sync)
  (set, Set) -> (nmov, notMover)
post
  node (s, Safe)
  (set, Set) -> (emp, empty)
  (set, Set) -> (syn, sync)
  (set, Set) -> (nmov, notMover)
  (i, Iter) -> (set, Set)
  (i, Iter) -> (syn, sync)
  (i, Iter) -> (nmov, notMover)
==>
  emp -> emp
  s -> s
  set -> set
  syn -> syn
  nmov -> nmov
<==


transition "newIter(Set): Iter, on notemp"
pre
  node (s, Safe)
  (set, Set) -> (emp, notEmpty)
  (set, Set) -> (syn, sync)
  (set, Set) -> (mov, mover)
post
  node (s, Safe)
  (set, Set) -> (emp, notEmpty)
  (set, Set) -> (syn, sync)
  (set, Set) -> (mov, mover)
  (i, Iter) -> (set, Set)
  (i, Iter) -> (syn, sync)
  (i, Iter) -> (mov, mover)
==>
  emp -> emp
  s -> s
  set -> set
  syn -> syn
  mov -> mov
<==

transition "add(Set), on emp"
pre
  node (s, Safe)
  (set, Set) -> (emp, empty)
  (set, Set) -> (syn, sync)
  (set, Set) -> (nsyn, notSync)
post
  node (s, Safe)
  (set, SetAddLoop) -> (emp, notEmpty)
  (set, SetAddLoop) -> (syn1, sync)
  (set, SetAddLoop) -> (nsyn, notSync)
==>
  s -> s
  set -> set
  syn -> nsyn
  nsyn -> nsyn
<==

transition "add(Set), on notemp"
pre
  node (s, Safe)
  (set, Set) -> (emp, notEmpty)
  (set, Set) -> (syn, sync)
  (set, Set) -> (nsyn, notSync)
post
  node (s, Safe)
  (set, SetAddLoop) -> (emp, notEmpty)
  (set, SetAddLoop) -> (syn1, sync)
  (set, SetAddLoop) -> (nsyn, notSync)
==>
  s -> s
  set -> set
  syn -> nsyn
  nsyn -> nsyn
<==

transition "add loop"
pre
  node (s, Safe)
  (set, SetAddLoop) -> (nmov, notMover)
  (set, SetAddLoop) -> (mov, mover)
  (i, Iter) -> (nmov, notMover)
post
  node (s, Safe)
  (set, SetAddLoop) -> (nmov, notMover)
  (set, SetAddLoop) -> (mov, mover)
  (i, Iter) -> (mov, mover)
==>
  s -> s
  set -> set
  mov -> mov
  nmov -> nmov
  i -> i
<==

transition "add loop exit"
pre
  node (s, Safe)
  node (set, SetAddLoop)
post
  node (s, Safe)
  node (set, Set)
==>
  s -> s
  set -> set
<==


transition "next(Iter), stay mover"
pre
  node (s, Safe)
  (set, Set) -> (syn, sync)
  (set, Set) -> (mov, mover)
  (i, Iter) -> (syn, sync)	
  (i, Iter) -> (set, Set)
  (i, Iter) -> (mov, mover)
post
  node (s, Safe)
  (set, Set) -> (syn, sync)
  (set, Set) -> (mov, mover)
  (i, Iter) -> (set, Set)
  (i, Iter) -> (mov, mover)
  (i, Iter) -> (syn, sync)
  node (syn, sync)
==>
  s -> s
  i -> i
  set -> set
  syn -> syn
  mov -> mov
<==

transition "next(Iter), become notmover"
pre
  node (s, Safe)
  (set, Set) -> (syn, sync)
  (set, Set) -> (mov, mover)
  (set, Set) -> (nmov, notMover)
  (i, Iter) -> (syn, sync)	
  (i, Iter) -> (set, Set)
  (i, Iter) -> (mov, mover)
post
  node (s, Safe)
  (set, Set) -> (syn, sync)
  (set, Set) -> (mov, mover)
  (set, Set) -> (nmov, notMover)
  (i, Iter) -> (set, Set)
  (i, Iter) -> (nmov, notMover)
  (i, Iter) -> (syn, sync)
  node (syn, sync)
==>
  s -> s
  i -> i
  set -> set
  syn -> syn
  mov -> mov
  nmov -> nmov
<==


transition "remove(Iter), stay notemp"
pre
  node (s, Safe)
  (set, Set) -> (emp, notEmpty)
  (set, Set) -> (syn, sync)
  (set, Set) -> (nsyn, notSync)
  (i, Iter) -> (set, Set)
  (i, Iter) -> (syn, sync)
post
  node (s, Safe)
  (set, SetRemoveLoop) -> (emp, notEmpty)
  (set, SetRemoveLoop) -> (syn1, sync)
  (set, SetRemoveLoop) -> (nsyn, notSync)
  (i, Iter) -> (set, SetRemoveLoop)
  (i, Iter) -> (syn1, sync)
==>
  s -> s
  set -> set
  syn -> nsyn
  nsyn -> nsyn
<==

transition "remove(Iter), become emp"
pre
  node (s, Safe)
  (set, Set) -> (emp, notEmpty)
  (set, Set) -> (syn, sync)
  (set, Set) -> (nsyn, notSync)
  (i, Iter) -> (set, Set)
  (i, Iter) -> (syn, sync)
post
  node (s, Safe)
  (set, SetRemoveLoop) -> (emp, empty)
  (set, SetRemoveLoop) -> (syn1, sync)
  (set, SetRemoveLoop) -> (nsyn, notSync)
  (i, Iter) -> (set, SetRemoveLoop)
  (i, Iter) -> (syn1, sync)
==>
  s -> s
  set -> set
  syn -> nsyn
  nsyn -> nsyn
<==

transition "remove loop"
pre
  node (s, Safe)
  (set, SetRemoveLoop) -> (nmov, notMover)
  (set, SetRemoveLoop) -> (mov, mover)
  (i, Iter) -> (mov, mover)
post
  node (s, Safe)
  (set, SetRemoveLoop) -> (nmov, notMover)
  (set, SetRemoveLoop) -> (mov, mover)
  (i, Iter) -> (nmov, notMover)
==>
  s -> s
  set -> set
  mov -> mov
  nmov -> nmov
  i -> i
<==

transition "remove loop exit"
pre
  node (s, Safe)
  node (set, SetRemoveLoop)
post
  node (s, Safe)
  node (set, Set)
==>
  s -> s
  set -> set
<==


// ERRORS

transition "next(Iter), error "
pre
  node (s, Safe)
  (set, Set) -> (nsync, notSync)
  (i, Iter) -> (nsync, notSync)
  (i, Iter) -> (set, Set)
post
  (set, Set) -> (nsync, notSync)
  (i, IterError) -> (nsync, notSync)
  (i, IterError) -> (set, Set)
==>
  set -> set
  i -> i
  nsync -> nsync
<==


transition "remove(Iter), error"
pre
  node (s, Safe)
  (set, Set) -> (nsync, notSync)
  (i, Iter) -> (nsync, notSync)
  (i, Iter) -> (set, Set)
post
  (set, Set) -> (nsync, notSync)
  (i, IterError) -> (nsync, notSync)
  (i, IterError) -> (set, Set)
==>
  set -> set
  i -> i
  nsync -> nsync
<==

