// Treiber with stack size

init
  node (n, SPAWN)
  (s, stack) -> (e, emp) [H]

transition "spawn push"
pre
  node (n, SPAWN)
  node (s, stack)
post
  node (n, SPAWN)
  (s, stack) -> (p, push0) [op]
  (p, push0) -> (x, x) [x]
==>
  n -> n
  s -> s
<==

transition "spawn pop"
pre
  node (n, SPAWN)
  node (s, stack)
post
  node (n, SPAWN)
  (s, stack) -> (p, pop0) [op]
==>
  n -> n
  s -> s
<==

// ****************************************************************
// STOP SPAWN

transition "nwaps"
pre
  node (s, SPAWN)
post
  node (s, NWAPS)
==>
  s -> s
<==

// ****************************************************************

transition "push read"
pre
  node (n, NWAPS)
  (s, stack) -> (p, push0) [op]
  (s, stack) -> (w, _) [H]  
post
  node (n, NWAPS)
  (s, stack) -> (p, push1) [op]
  (s, stack) -> (w, _) [H]  
  (p, push1) -> (w, _) [H]
==>
  n -> n
  p -> p
  w -> w
  s -> s
<==


// ****************************************************************

transition "push succeed"
pre
  node (n, NWAPS)
  (s, stack) -> (p, push1) [op]
  (s, stack) -> (w, _) [H]  
  (p, push1) -> (w, _) [H]
  (p, push1) -> (x, x) [x]
post
  node (n, NWAPS)
  (s, stack) -> (x, x) [H]  
  (s, stack) -> (w, _) [A]
==>
  n -> n
  x -> x
  w -> w
  s -> s
<==

transition "push fail"
pre
  node (n, NWAPS)
  (s, stack) -> (p, push1) [op]
  (s, stack) -> (w1, _) [H]  
  (p, push1) -> (w2, _) [H]
  (p, push1) -> (x, x) [x]
post
  node (n, NWAPS)
  (s, stack) -> (p, push0) [op]
  (s, stack) -> (w1, _) [H]  
  (p, push0) -> (x, x) [x]
==>
  n -> n
  x -> x
  p -> p
  w1 -> w1
  s -> s
<==

// ****************************************************************
// POP


transition "pop read"
pre
  node (n, NWAPS)
  (s, stack) -> (p, pop0) [op]
  (s, stack) -> (w, _) [H]  
post
  node (n, NWAPS)
  (s, stack) -> (p, pop1) [op]
  (s, stack) -> (w, _) [H]  
  (p, pop1) -> (w, _) [H]
==>
  n -> n
  p -> p
  w -> w
  s -> s
<==



transition "pop fail"
pre
  node (n, NWAPS)
  (s, stack) -> (p, pop1) [op]
  (s, stack) -> (w1, _) [H]  
  (p, pop1) -> (w2, _) [H]
post
  node (n, NWAPS)
  (s, stack) -> (p, pop0) [op]
  (s, stack) -> (w1, _) [H]  
==>
  n -> n
  p -> p
  w1 -> w1
  s -> s
<==


transition "pop success"
pre
  node (n, NWAPS)
  (s, stack) -> (p, pop1) [op]
  (s, stack) -> (w1, _) [H]  
  (p, pop1) -> (w1, _) [H]
  (s, stack) -> (e, emp) [A]
  (s, stack) -> (w2, _) [A]
post
  node (n, NWAPS)
  (s, stack) -> (e, emp) [A]
  (s, stack) -> (w2, _) [H]
==>
  n -> n
  w2 -> w2
  s -> s
  e -> e
<==


transition "pop success2"
pre
  node (n, NWAPS)
  (s, stack) -> (p, pop1) [op]
  (s, stack) -> (w1, _) [H]  
  (p, pop1) -> (w1, _) [H]
  (s, stack) -> (e, emp) [A]
post
  node (n, NWAPS)
  (s, stack) -> (e, emp) [
H]
==>
  n -> n
  s -> s
  e -> e
<==
no
  (s, stack) -> (w2, _) [A]
==>
  s -> s
